<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
  mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/CannoliBorderlessWindowTitleBarStyle.xaml"/>
        <ResourceDictionary Source="/CannoliBorderlessWindowQuickAccessStyle.xaml"/>
        <ResourceDictionary Source="/CannoliBorderlessWindowLowerQuickAccessStyle.xaml"/>
        <ResourceDictionary Source="/CannoliBorderlessWindowNavigationBarStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <SolidColorBrush x:Key="CannoliAccentColorBrush" Color="#FF0097BA"/>
    <SolidColorBrush x:Key="CannoliAccentColorBrush2" Color="#FF81C2D5"/>
    <SolidColorBrush x:Key="CannoliAccentColorBrush3" Color="#FFBCD975"/>
    <Color x:Key="WindowTitleForegroundColor">White</Color>
    <Color x:Key="WindowButtonForegroundColor">White</Color>
    <Color x:Key="WindowBackgroundColor">#FF3F3F3F</Color>
    <SolidColorBrush x:Key="WindowBackgroundColorBrush" Color="{StaticResource WindowBackgroundColor}"/>
    <Color x:Key="WindowButtonHighlightColor">#FFD9F596</Color>
    <SolidColorBrush x:Key="WindowButtonHighlightColorBrush" Color="{StaticResource WindowButtonHighlightColor}"/>
    <Color x:Key="WindowButtonPressedColor">#FFA8C368</Color>
    <SolidColorBrush x:Key="WindowButtonPressedColorBrush" Color="{StaticResource WindowButtonPressedColor}"/>
    <SolidColorBrush x:Key="WindowButtonForegroundColorBrush" Color="{StaticResource WindowButtonForegroundColor}"/>
    <SolidColorBrush x:Key="WindowTitleForegroundColorBrush" Color="{StaticResource WindowTitleForegroundColor}"/>
    <Style x:Key="CannoliWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource WindowButtonForegroundColorBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="MOverBorder" BorderBrush="Black" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Background="{DynamicResource WindowButtonHighlightColorBrush}" Opacity="0"/>
                        <Border x:Name="PressedBorder" BorderBrush="Black" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Opacity="0"  Background="{DynamicResource WindowButtonPressedColorBrush}"/>
                        <ContentPresenter x:Name="contentPresenter"
														HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
														SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
														Margin="{TemplateBinding Padding}"
														RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CannoliBorderlessWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource WindowButtonForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundColorBrush}"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="#00000000" d:DesignWidth="604" d:DesignHeight="244.46">
                        <Border x:Name="WindowBorder" Margin="10" SnapsToDevicePixels="True">
                            <Grid>
                                <Border x:Name="DropShadowBorder" BorderBrush="{x:Null}" Background="{DynamicResource CannoliAccentColorBrush}" BorderThickness="0" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Visibility="Collapsed">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Direction="0"/>
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="border1" BorderThickness="0">
                                    <AdornerDecorator>
                                        <Grid x:Name="LayoutRoot" Background="{DynamicResource WindowBackgroundColorBrush}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="57" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="20" />
                                            </Grid.RowDefinitions>
                                            <Grid x:Name="HeaderBar" Grid.ColumnSpan="2">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                  <ColumnDefinition Width="*"/>
                                                  <ColumnDefinition Width="Auto"/>
                                                  <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Rectangle x:Name="HeaderBackground" VerticalAlignment="Stretch" Grid.Row="0" Fill="{DynamicResource CannoliAccentColorBrush}" Grid.ColumnSpan="4" Grid.RowSpan="2"/>
                                                <Rectangle x:Name="HeaderBackground_Copy" VerticalAlignment="Stretch" Grid.Row="0" Fill="{DynamicResource CannoliAccentColorBrush3}" Grid.ColumnSpan="1" Grid.RowSpan="2" Grid.Column="2"/>
                                                <Grid x:Name="Color_Bars" Margin="0" HorizontalAlignment="Right" ClipToBounds="True" Grid.Column="1" Grid.RowSpan="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Rectangle Fill="{DynamicResource CannoliAccentColorBrush3}" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="2"/>
                                                    <Path Data="M126.33273,-0.16666269 L159.33281,-0.11625537 159.33281,70.000336 z" HorizontalAlignment="Left" Height="58" Stretch="Fill" VerticalAlignment="Top" Width="34" Fill="{DynamicResource CannoliAccentColorBrush2}" Grid.RowSpan="1" Margin="0,0,0,-2"/>
                                                    <Rectangle Fill="{DynamicResource CannoliAccentColorBrush2}" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Grid.Column="1"/>
                                                    <Path Data="M126.33273,-0.16666269 L159.33281,-0.11625537 159.33281,70.000336 z" HorizontalAlignment="Left" Height="58" Stretch="Fill" VerticalAlignment="Top" Width="110" Fill="{DynamicResource CannoliAccentColorBrush3}" Grid.RowSpan="1" Margin="0,0,0,-2" Grid.Column="1"/>
                                                </Grid>
                                                <StackPanel x:Name="WindowControls" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch" shell:WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0" Margin="0" Grid.ColumnSpan="1" Grid.Column="3">
                                                    <ContentControl Style="{DynamicResource CannoliBorderlessWindowQuickAccessStyle}" Margin="0" HorizontalAlignment="Right"/>
                                                    <Button x:Name="Minimize" Command="{Binding Source={x:Static shell:SystemCommands.MinimizeWindowCommand}}" ToolTip="{Binding MinimizeWindowCommand}" Style="{StaticResource CannoliWindowButtonStyle}" Width="25" Height="25" Margin="0" VerticalAlignment="Top" Visibility="Visible">
                                                        <Grid Width="Auto" Height="Auto" RenderTransform="1,0,0,1,0,1">
                                                            <Path Data="M0,6 L8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" StrokeThickness="2"  />
                                                        </Grid>
                                                    </Button>
                                                    <Button x:Name="Restore" Command="{Binding Source={x:Static shell:SystemCommands.RestoreWindowCommand}}" ToolTip="{Binding RestoreWindowCommand}" Visibility="Visible" Style="{StaticResource CannoliWindowButtonStyle}" Width="25" Height="25" Margin="0" VerticalAlignment="Top">
                                                        <Grid Width="Auto" Height="Auto" UseLayoutRounding="True">
                                                            <Path Data="M2.9795,1 L8.9795,1 8.9795,7 M1,5.375 L7,5.375 M1,4.375 L7,4.375 7,10.375 1,10.375 z" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" StrokeThickness="1" Margin="-1,0,0,0" UseLayoutRounding="True" Visibility="Visible" SnapsToDevicePixels="True" Height="11" Width="10"  />
                                                        </Grid>
                                                    </Button>
                                                    <Button x:Name="Maximize" Command="{Binding Source={x:Static shell:SystemCommands.MaximizeWindowCommand}}" ToolTip="{Binding MaximizeWindowCommand}" Style="{StaticResource CannoliWindowButtonStyle}" Width="25" Height="25" Margin="0" VerticalAlignment="Top" Visibility="Collapsed">
                                                        <Grid Width="Auto" Height="Auto">
                                                            <Path Data="M0,1 L9,1 L9,8 L0,8 Z" Width="9" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" StrokeThickness="2"  />
                                                        </Grid>
                                                    </Button>
                                                    <Button x:Name="Close" Command="{Binding Source={x:Static shell:SystemCommands.CloseWindowCommand}}" ToolTip="{Binding CloseWindowCommand}" Style="{StaticResource CannoliWindowButtonStyle}" Width="25" Height="25" Margin="0" VerticalAlignment="Top">
                                                        <Grid Width="Auto" Height="Auto" RenderTransform="1,0,0,1,0,1">
                                                            <Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" StrokeThickness="2"  />
                                                        </Grid>
                                                    </Button>
                                                </StackPanel>
                                                <ContentControl shell:WindowChrome.IsHitTestVisibleInChrome="True" Style="{DynamicResource CannoliBorderlessWindowLowerQuickAccessStyle}" Margin="0,0,10,0" HorizontalAlignment="Stretch" Grid.Column="3" Grid.RowSpan="1" Grid.Row="1"/>
                                                <ContentControl shell:WindowChrome.IsHitTestVisibleInChrome="True" Style="{DynamicResource CannoliBorderlessWindowNavigationBarStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" />
                                            </Grid>
                                            <ContentPresenter x:Name="contentPresenter" Grid.Row="1" Grid.RowSpan="2" Margin="0"/>
                                            <ContentControl Style="{DynamicResource CannoliBorderlessWindowTitleBarStyle}"  VerticalAlignment="Stretch" HorizontalAlignment="Center" Margin="0" />
                                        </Grid>
                                    </AdornerDecorator>
                                </Border>
                                <Border x:Name="border" BorderThickness="1" Visibility="Collapsed" BorderBrush="{DynamicResource CannoliAccentColorBrush}"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="DropShadowBorder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
												</Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CornerRadius="0" GlassFrameThickness="1" CaptionHeight="45" ResizeBorderThickness="15"/>
            </Setter.Value>
        </Setter>
        <Setter Property="AllowsTransparency" Value="True"/>
    </Style>
    <!-- Resource dictionary entries should be defined here. -->
</ResourceDictionary>